// experiment.hoc
// Olfactory bulb network model: experiment file
// Andrew Davison, The Babraham Institute, 2000; CNRS 2020

// *** Setup multithreading

objref pc
pc = new ParallelContext()
pc.nthread(n_threads)

// *** Set inputs and connections
set_no_input()
glomshock(20,shock_onset,5)
if (NMDAweight > 0) {
  randomise_NMDA(NMDAweight,(0.5*NMDAweight)^2)
}

// *** Voltage clamp mitral cell
mit[3][3].GABAA.e = eGABAA_vclamp  // mV
objref vclamp
mit[3][3].soma vclamp = new SEClamp(0.5)
vclamp.rs = 2 // Mohm
vclamp.dur1 = 1
vclamp.amp1 = -65
vclamp.dur2 = 4000
vclamp.amp2 = -70
vclamp.dur3 = 0
vclamp.amp3 = -65

objref vclampg
gran[0][18].soma vclampg = new SEClamp(0.5)
vclampg.rs = 2 // Mohm
vclampg.dur1 = 1
vclampg.amp1 = -65
vclampg.dur2 = 4000
vclampg.amp2 = -70
vclampg.dur3 = 0
vclampg.amp3 = -65


// *** Set-up recording
objref igabaa, tvec, vgran, vmit, iclamp, iAMPA, iNMDA, ivclampg
record_vec_size = int(tstop/record_step)+1
igabaa = new Vector(record_vec_size)
tvec = new Vector(record_vec_size)
vgran = new Vector(record_vec_size)
vmit = new Vector(record_vec_size)
iclamp = new Vector(record_vec_size)
iAMPA = new Vector(record_vec_size)
iNMDA = new Vector(record_vec_size)
ivclampg = new Vector(record_vec_size)
igabaa.record(&mit[3][3].GABAA.i,record_step)
// in the following line, the first arg is needed for multithreading; can be any point process
tvec.record(mit[3][3].GABAA, &t,record_step)
vgran.record(&gran[0][1].periph.v(0.5),record_step)
vmit.record(&mit[0][0].dend.v(0.5),record_step)
iclamp.record(&vclamp.i,record_step)
iAMPA.record(&gran[0][18].AMPAr.i,record_step)
iNMDA.record(&gran[0][18].NMDAr.i,record_step)
ivclampg.record(&vclampg.i,record_step)


// *** Process data and print out results
proc print_results() {
  xopen("calcisilag.hoc")
  print_raster(fileroot)
  print_gran_raster(fileroot)
  print_gran_hist(1,fileroot)
  sprint(filename,"%s.curvs",fileroot)
  outfile.wopen(filename)
  for i = 0, tvec.size()-1 {
    outfile.printf("%8.3g %8.3g %8.3g %8.3g %8.3g %8.3g %8.3g %8.3g\n",tvec.x[i],igabaa.x[i],vmit.x[i],vgran.x[i],iclamp.x[i],iAMPA.x[i],iNMDA.x[i],ivclampg.x[i])
  }
  outfile.close()
  print "Results printed to files"
}


// *** Main

init()
run()
print_results()
